// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: addExpenses.sql

package db

import (
	"context"
)

const addCapitalExpense = `-- name: AddCapitalExpense :exec
INSERT INTO capital_expenses (
    budget_id,
    user_id,
    expenses,
    description
)   VALUES (
    $1, $2, $3, $4
)
`

type AddCapitalExpenseParams struct {
	BudgetID    int64  `json:"budget_id"`
	UserID      int64  `json:"user_id"`
	Expenses    string `json:"expenses"`
	Description string `json:"description"`
}

func (q *Queries) AddCapitalExpense(ctx context.Context, arg AddCapitalExpenseParams) error {
	_, err := q.db.ExecContext(ctx, addCapitalExpense,
		arg.BudgetID,
		arg.UserID,
		arg.Expenses,
		arg.Description,
	)
	return err
}

const addEatoutExpense = `-- name: AddEatoutExpense :exec
INSERT INTO eatout_expenses (
    budget_id,
    user_id,
    expenses,
    description
)   VALUES (
    $1, $2, $3, $4
)
`

type AddEatoutExpenseParams struct {
	BudgetID    int64  `json:"budget_id"`
	UserID      int64  `json:"user_id"`
	Expenses    string `json:"expenses"`
	Description string `json:"description"`
}

func (q *Queries) AddEatoutExpense(ctx context.Context, arg AddEatoutExpenseParams) error {
	_, err := q.db.ExecContext(ctx, addEatoutExpense,
		arg.BudgetID,
		arg.UserID,
		arg.Expenses,
		arg.Description,
	)
	return err
}

const addEntertainmentExpense = `-- name: AddEntertainmentExpense :exec
INSERT INTO entertainment_expenses (
    budget_id,
    user_id,
    expenses,
    description
)   VALUES (
    $1, $2, $3, $4
)
`

type AddEntertainmentExpenseParams struct {
	BudgetID    int64  `json:"budget_id"`
	UserID      int64  `json:"user_id"`
	Expenses    string `json:"expenses"`
	Description string `json:"description"`
}

func (q *Queries) AddEntertainmentExpense(ctx context.Context, arg AddEntertainmentExpenseParams) error {
	_, err := q.db.ExecContext(ctx, addEntertainmentExpense,
		arg.BudgetID,
		arg.UserID,
		arg.Expenses,
		arg.Description,
	)
	return err
}
